{"body":"<pre><code class=\"lang-elixir\">require OK\n\ndef do_payment(args) <span class=\"hljs-keyword\">do</span>\n  OK.<span class=\"hljs-keyword\">with</span> <span class=\"hljs-keyword\">do</span>\n    cart &lt;- create_payment(args)\n    payment &lt;- prepare_payment_request(cart)\n    response &lt;- send_payment(payment)\n    result &lt;- prepare_response(response)\n    OK.success result\n  <span class=\"hljs-keyword\">else</span>\n    :<span class=\"hljs-function\"><span class=\"hljs-title\">connection_error</span> -&gt;</span> OK.failure :problems_connecting\n    :<span class=\"hljs-function\"><span class=\"hljs-title\">out_of_funds</span> -&gt;</span> OK.failure :run_out_of_funds\n    :<span class=\"hljs-function\"><span class=\"hljs-title\">expired</span> -&gt;</span> OK.failure :cc_expired\n    :<span class=\"hljs-function\"><span class=\"hljs-title\">avs</span> -&gt;</span> OK.failure :address_verification_problems\n    :<span class=\"hljs-function\"><span class=\"hljs-title\">address_mismatch</span> -&gt;</span> OK.failure :address_problems\n    <span class=\"hljs-comment\">//...</span>\n    :<span class=\"hljs-function\"><span class=\"hljs-title\">error</span> -&gt;</span> OK.failure :error\n  end\nend\n</code></pre>\n<blockquote>\n<p>Even if you need to catch errors and match or whatever you can ether use the Elixir with or the library OK</p>\n</blockquote>\n","updatedAt":"2017-04-07T04:42:56.000Z"}